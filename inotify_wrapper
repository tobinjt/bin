#!/bin/bash

set -e -f -u -o pipefail

usage() {
  cat <<END_OF_USAGE
Watch the specified files and run the binary when they change.
Usage: $0 file1 [file2 ...] -- binary [args ...]
Files will not be passed to the binary, the caller needs to do that if
required.
END_OF_USAGE
}

main() {
  if [[ "$#" -gt 0 ]] && [[ "$1" == "-h" || "$1" == "--help" ]]; then
    usage
    return 0
  fi

  local files_to_watch=()
  while [[ "$#" -gt 0 && "$1" != "--" ]]; do
    files_to_watch+=("$1")
    shift
  done
  ## Discard "--"
  if [[ "$#" -gt 0 ]]; then
    shift
  fi
  local binary_and_args=("$@")

  if [[ "${#files_to_watch[@]}" -eq 0 ]]; then
    printf "%s: need at least one file to watch\\n\\n" "$0" >&2
    usage >&2
    return 1
  fi
  if [[ "${#binary_and_args[@]}" -eq 0 ]]; then
    printf "%s: need a binary (and optionally args) to execute\\n\\n" "$0" >&2
    usage >&2
    return 1
  fi

  local use_fswatch=0
  if type fswatch >& /dev/null; then
    use_fswatch=1
  else
    if ! type inotifywait >& /dev/null; then
      printf "%s: need one of fswatch(1) or inotifywait(1)\\n" "$0" >&2
      return 1
    fi
  fi

  "${binary_and_args[@]}" || true
  date +"%Y-%m-%d %H:%M:%S"
  while true; do
    if [[ "${use_fswatch}" -eq 1 ]]; then
      fswatch --one-event "${files_to_watch[@]}" > /dev/null
    else
      inotifywait --quiet "${files_to_watch[@]}"
    fi
    printf "\n\n\n\n"
    "${binary_and_args[@]}" || true
    date +"%Y-%m-%d %H:%M:%S"
  done
}

main "$@"

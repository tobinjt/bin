#!/usr/bin/perl

# A version of which that'll handle file globs.
# XXX: write docs.

use strict;
use warnings;

use File::Spec   qw();
use File::Glob   qw(:glob);
use Getopt::Long qw();
use Pod::Usage   qw();

# XXX why are these options set?
my $glob_options = GLOB_MARK | GLOB_BRACE | GLOB_QUOTE | GLOB_TILDE;

my %Options = (help        => 0,
               insensitive => 0,
               prettyprint => 0,
               sort        => 0,
              );
Getopt::Long::Configure(qw(no_getopt_compat gnu_getopt));
Getopt::Long::GetOptions(\%Options,
                         q{help|h},
                         q{insensitive|i},
                         q{prettyprint|p},
                         q{sort|s},
                        ) or Pod::Usage::pod2usage(2);
if ($Options{help}) {
    Pod::Usage::pod2usage(q{-verbose} => 2);
}
if (not @ARGV) {
    Pod::Usage::pod2usage(2);
}
if ($Options{insensitive}) {
    $glob_options |= GLOB_NOCASE;
}

my %bin_dirs;
my @bin_dirs = grep { ! $bin_dirs{$_}++ } File::Spec->path();
my @found = ();
foreach my $pattern (@ARGV) {
    foreach my $bin_dir (@bin_dirs) {
        my $glob = File::Spec->catfile($bin_dir, $pattern);
        push @found, File::Glob::bsd_glob ($glob, $glob_options);
    }
}

if ($Options{sort}) {
    my %map = map { (File::Spec->splitpath($_))[2] => $_; } @found;
    my @keys = sort keys %map;
    @found = @map{@keys};
}

# Don't pretty print if output is to a terminal, unless --prettyprint was used.
if (not -t STDOUT and not $Options{prettyprint}) {
    foreach my $exe ( @found ) {
        print "$exe\n";
    }
    exit 0;
}

# else pretty print
my $length = 0;
foreach my $exe (@found) {
    my $dir = (File::Spec->splitpath($exe))[1];
    if ($length < length $dir) {
        $length = length $dir;
    }
}
foreach my $exe ( @found ) {
    my $dir = (File::Spec->splitpath($exe))[1];
    print " " x ($length - length $dir);
    print "$exe\n";
}

#!/bin/bash

set -e -f -u -o pipefail

create_datebase() {
  local database="$1"
  sqlite3 "${database}" <<END_OF_CREATE
CREATE TABLE linksdb (
  urlname       VARCHAR(256) NOT NULL,
  parentname    VARCHAR(256),
  baseref       VARCHAR(256),
  valid         INT,
  result        VARCHAR(256),
  warning       VARCHAR(512),
  info          VARCHAR(512),
  url           VARCHAR(256),
  line          INT,
  col           INT,
  name          VARCHAR(256),
  checktime     INT,
  dltime        INT,
  size          INT,
  cached        INT,
  level         INT NOT NULL,
  modified      VARCHAR(256),
  timestamp     DATETIME DEFAULT CURRENT_TIMESTAMP
);
END_OF_CREATE
}

run_linkchecker() {
  # - Cut down on output so this can be run from cron, but write to a file that
  #   can be displayed on failure or when run interactively.
  # - Check external links but do not recurse on external sites.
  # - Exclude domains that definitely won't work; list was determined through
  #   debugging and perserverence.
  # - stderr will always have a warning about SSL certificates.
  # - To figure out problems run with '--debug=checking' and look for the URLs
  #   that keep getting checked at the end.
  linkchecker \
    --no-status \
    --quiet \
    --file-output=text \
    --file-output=sql \
    --check-extern \
    --no-follow-url='!(www.johntobin.ie|www.arianetobin.ie)' \
    --ignore-url=//en.wikipedia.org \
    --ignore-url=//pool.ntp.org \
    --ignore-url=//www.amazon.co.uk \
    --ignore-url=//www.example.org \
    "$@" >stdout 2>stderr
}

main() {
  if [[ ! -t 0 ]]; then
    sleep $((RANDOM % 600))
  fi
  local destdir exit_status=0 database="${HOME}/tmp/linkchecker-cron.sqlite3"
  if [[ ! -f "${database}" ]]; then
    create_datebase "${database}"
  fi
  destdir="$(mktemp -d -t linkchecker-cron.XXXXXXXXXX)"
  cd "${destdir}"

  run_linkchecker "$@" || exit_status="$?"
  sqlite3 "${database}" < linkchecker-out.sql

  if [[ -t 0 ]]; then
    printf "Output in %s\\n" "${destdir}"
    printf "Exit status: %s\\n" "${exit_status}"
    set +f
    cat -- *
    set -f
  else
    rm -rf "${destdir}"
  fi
  exit "${exit_status}"
}

main "$@"

#!/usr/bin/env perl

# $Id$

use strict;
use warnings;

use List::Util qw(sum);

my @values;
push @values, <>;
chomp @values;

my $num_values = @values;
my $mean = sum(@values) / $num_values;
my $sum_of_differences = 0;
my %mode;
foreach my $value (@values) {
    $sum_of_differences += (($value - $mean) ** 2);
    $mode{$value}++;
}
my $stddev = sqrt ($sum_of_differences / $num_values);
my @sorted_values = sort {$a <=> $b } @values;
my $median;
if (@sorted_values % 2) {
    my $index = int (@sorted_values / 2);
    $median = $sorted_values[$index];
} else {
    my $index1 = int (@sorted_values / 2);
    my $index2 = int ((@sorted_values - 1) / 2);
    $median = ($sorted_values[$index1] + $sorted_values[$index2]) / 2;
}
my $mode = (sort { $mode{$b} <=> $mode{$a} } keys %mode)[0];

print <<"OUTPUT";
Number of values: $num_values
Mean:   $mean
Median: $median
Mode:   $mode
Standard deviation: $stddev
OUTPUT

#!/bin/bash

set -e -f -u -o pipefail

usage() {
  cat <<USAGE
$0 [FLAGS]
Flags:
  --install_individually
  --skip_brew
  --skip_flexget
  --skip_python
USAGE
}

test_python() {
  cd "${HOME}/bin/python"
  pytest
  set +f
  pylint ./*.py
  mypy -- *.py
  set -f
}

test_flexget() {
  printf "\\n\\nTesting Flexget\\n"
  flexget-wrapper execute
  printf "\\n\\n\\n\\n\\n"
}

virtualenv_install() {
  local destdir="$1" install_individually="$2"
  shift 2

  mkdir -p "${destdir}"
  # Run virtualenv from the destination directory just in case.
  cd "${destdir}"
  virtualenv --no-periodic-update "${destdir}"
  # virtualenv sometimes deletes the destination directory so cd there again.
  cd "${destdir}"
  source bin/activate

  if [[ "${install_individually}" -eq 0 ]]; then
    # Install everything at once so that dependencies get resolved properly
    # across packages.
    pip3 install "$@"
  else
    # Install packages one by one so that it's easier to figure out which
    # package is broken when something goes wrong.
    local package
    for package in "$@"; do
      printf "\n\npip3 install %s\\n" "${package}"
      pip3 install "${package}"
    done
  fi
  deactivate
}

main() {
  if ! is_mac_os; then
    printf "Only Mac OS is supported, sorry.\\n" >&2
    exit 1
  fi
  local skip_brew=0 skip_flexget=0 skip_python=0 install_individually=0
  while [[ "$#" -gt 0 ]]; do
    case "${1}" in
      --install_individually)
        install_individually=1
        shift
        ;;
      --skip_brew)
        skip_brew=1
        shift
        ;;
      --skip_flexget)
        skip_flexget=1
        shift
        ;;
      --skip_python)
        skip_python=1
        shift
        ;;
      *)
        usage >&2
        return 1
        ;;
    esac
  done

  # Let Python write bytecode.
  unset PYTHONDONTWRITEBYTECODE
  if [[ "${skip_brew}" -eq 0 ]]; then
    # Update all existing Homebrew packages rather than partially upgrading when
    # installing python and virtualenv.
    bubc
    # Install Python and virtualenv, just in case.
    brew install python virtualenv
  fi

  # Dummy values needed by activate scripts.
  export PS1="dummy"
  local date
  date="$(date +%Y-%m-%d--%H-%M-%S)"
  local virtualenv_dir="${HOME}/tmp/virtualenv"
  readonly date virtualenv_dir

  # I tried using homebrew packages for some tools, but that lead to a terrible
  # mix of Python versions and tools not finding modules so I reverted to using
  # Pip for everything.

  # Install all Python development tools in a single virtualenv so all the
  # modules are easily available at the same time.
  # Removed packages: mutmut depends on pony which doesn't support Python 3.9.
  # mypy needs lxml but doesn't depend on it.
  if [[ "${skip_python}" -eq 0 ]]; then
    local python_dir="${virtualenv_dir}/python"
    local python_date_dir="${python_dir}-${date}"
    readonly python_dir python_date_dir
    # Run in a subshell because it changes directory.
    (virtualenv_install "${python_date_dir}" "${install_individually}" \
      black \
      identify \
      lxml \
      mypy \
      pudb \
      pyfakefs \
      pylint \
      pytest \
      pytest-cov \
      pytest-flakefinder \
      'python-lsp-server[all]' \
      pyyaml \
      types-PyYAML)
    # Homebrew warns that *-config can cause problems, and AFAIK I don't need
    # this, so delete it.
    rm -f "${python_date_dir}/bin/pylint-config"
    ln -sf "${python_date_dir}" "${python_dir}"
    # Normally $PATH will contain this directory; add it so that initial
    # installation works when $PATH does not contain it.
    PATH="${PATH}:${python_dir}/bin"
    hash -r

    # Check that tools work properly.
    # Run in a subshell because it changes directory.
    (test_python)
  fi

  # Flexget.  Only install and test on machines where I normally run flexget.
  if [[ "${skip_flexget}" -eq 0 && -d "${HOME}/tmp/logs/flexget" ]]; then
    local flexget_dir="${virtualenv_dir}/flexget"
    local flexget_date_dir="${flexget_dir}-${date}"
    readonly flexget_dir flexget_date_dir
    # Run in a subshell because it changes directory.
    (virtualenv_install "${flexget_date_dir}" "${install_individually}" \
      "flexget" \
      "transmission-rpc==4.3.0")
    ln -sf "${flexget_date_dir}" "${flexget_dir}"
    # Normally $PATH will contain this directory; add it so that initial
    # installation works when $PATH does not contain it.
    PATH="${PATH}:${flexget_dir}/bin"
    hash -r
    test_flexget
  fi
}

main "$@"

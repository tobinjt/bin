#!/usr/bin/perl

use strict;
use warnings;

use feature qw(say);

use Cwd;
use File::Spec::Functions;

my $cwd = getcwd();
if ($cwd !~ m,/movies/,i) {
    die qq{$0: bad current directory: $cwd; it must contain '/movies/'\n};
}

my @banned_words = qw(1080p 264 3xforum 480p 720p aac ac3 acab avi axxo bdrip
                      bluray brrip divx dl dvd dvd-rip dvdrip dvdscr etrg evo
                      extended fxg fxm h264 hc hdrip hdtv jiggly juggs klaxxon
                      maxspeed p2p r5 rarbg repack rip ro screener starlets
                      stealthmaster torentz uncut unrated vomit web www x264
                      xvid xxx yify {1337x});
# For every banned WORD, we'll discard WORD and (WORD).
my %banned_words = map { ($_ => 1, qq{($_)} => 1) } @banned_words;
my %new_filenames;
foreach my $filename (glob q{*}) {
    if ($filename !~ m/^(.*)\.([^.]+)$/) {
        warn qq{Strange filename: $filename\n};
        next;
    }
    my ($name, $ext) = ($1, $2);
    $ext = lc $ext;

    # Remove [stuff in square brackets]
    $name =~ s/\[[^]]*\]/ /g;
    # Remove (stuff in parentheses)
    $name =~ s/\([^)]*\)/ /g;
    # Substitute "&" with "and"
    $name =~ s/&/and/g;
    # Mangle each word, discarding words we don't want.
    my @words = map { ucfirst }
                    # Mangle part numbers.
                    map { s/^(?:part|cd)([123])$/p$1/; $_; }
                        # Drop banned words.
                        grep { not exists $banned_words{$_} }
                            # Drop years; occasional false positives :/
                            grep { not m/^20[01][0-9]$/ }
                                # Drop empty words.
                                grep { length }
                                    split /[- ._]+/,
                                        lc $name;

    my $newname = join q{ }, @words;
    $newname .= qq{.$ext};
    next if $newname eq $filename;

    if ($new_filenames{$newname}++) {
        warn qq{Already used: $filename -> $newname\n};
        next;
    }
    if (-e $newname) {
        if (lc $newname ne lc $filename) {
            warn qq{Already exists: $filename -> $newname\n};
            next;
        }
    }

    # Work around Windows' case-insensitivity
    my $temp_newname = qq{X$newname};
    say qq{$filename -> $temp_newname -> $newname};
    if ($new_filenames{$temp_newname}++) {
        warn qq{Already used: $filename -> $temp_newname\n};
        next;
    }
    if (-e $temp_newname) {
        warn qq{Already exists: $filename -> $temp_newname\n};
        next;
    }
    rename $filename, $temp_newname
        or die qq{$0: failed renaming $filename -> $temp_newname: $!\n};
    rename $temp_newname, $newname
        or die qq{$0: failed renaming $temp_newname -> $newname: $!\n};
}

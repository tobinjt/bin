#!/bin/bash

set -e -u -f -o pipefail

# Initial setup won't have the right environment, so extend $PATH.
PATH="/usr/local/bin:${PATH}"
export PATH

# Stop git looking for a commit message when 'git pull' is run.
GIT_MERGE_AUTOEDIT=no
export GIT_MERGE_AUTOEDIT

if [[ -z "$(type -a vim)" ]]; then
  echo "Missing vim :(" >&2
  echo "apt-get install vim-nox" >&2
  exit 1
fi

if [[ -n "$(type -a brew)" ]]; then
  if ! brew list | grep python; then
    brew install python
  fi
fi

DESTDIR="${HOME}/src/dotfiles"
readonly DESTDIR
if [[ ! -d "${DESTDIR}" ]]; then
  mkdir -p "$(dirname "${DESTDIR}")"
  git clone https://github.com/tobinjt/dotfiles.git "${DESTDIR}"
fi
cd "${DESTDIR}"
# Make .ssh inaccessible.
chmod 700 .ssh
git pull --no-rebase
git submodule init
git submodule update
# Remove .bashrc that linkdirs will not overwrite.
rm -f "${HOME}/.bashrc"
PATH="${PATH}:${HOME}/bin"
export PATH
dotfiles
if [[ "${USER}" == "johntobin" ]]; then
  sed -i -e 's!https://github.com/!git@github.com:!' .git/config
  # I need to do this anyway, so might as well do it now.
  sed -i -e 's!https://github.com/!git@github.com:!' "${HOME}/bin/.git/config"
  (cd "${HOME}/bin" && pre-commit install)
fi

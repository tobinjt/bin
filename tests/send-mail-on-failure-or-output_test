#!/bin/bash

set -e -f -u -o pipefail

source ../send-mail-on-failure-or-output

mail() {
  if grep "do-not@mail" <<< "$*"; then
    printf "mail should not have been called for %s\\n" "$*" >&2
    exit 1
  fi
  printf "mail: args are: \"%s\"\\n" "$*"
}

output_to_stderr() {
  printf "stderr output\\n" >&2
}

output_and_failure() {
  printf "some output\\n"
  false
}

this_should_not_be_run() {
  printf "THIS SHOULD NOT BE RUN!!!\\n" >&2
  false
}

log() {
  echo "$1"
  echo "$1" >&2
}

SUBJECT_PREFIX="test@testing"
export SUBJECT_PREFIX
# Any test where main fails will cause the overall test to fail, unless the
# failure is checked for.  The best way to check for that is - surprisingly - to
# check for *success* which both checks for unexpected success and prevents the
# expected failure from failing the overall test.
log 1do-not@mail
main 1do-not@mail true
log 2do-send@mail
main 2do-send@mail false && printf "Unexpected success 2do-send@mail\\n"
log 3do-send@mail
main 3do-send@mail echo foo
log 4do-not@mail
main --ignore_exit_status 4do-not@mail false \
  && printf "Unexpected success 4do-not@mail\\n"
log 5do-send@mail
main --ignore_exit_status 5do-send@mail echo bar
log 6do-send@mail
main 6do-send@mail output_to_stderr
log 7do-send@mail
main 7do-send@mail output_and_failure \
  && printf "Unexpected success 7do-not@mail\\n"
log 8incompatible-arguments@mail
main --ignore_exit_status --only_on_failure 8incompatible-arguments@mail \
    this_should_not_be_run \
  && printf "Unexpected success 8incompatible-arguments\\n"
log 9no-mail-on-success@mail
main --only_on_failure 9no-mail-on-success@mail echo foo
log 10-mail-on-failure-no-output@mail
main --only_on_failure 10-mail-on-failure-no-output@mail output_and_failure \
  && printf "Unexpected success 10-mail-on-failure-no-output\\n"
log 11---help@mail
main --help || printf "Unexpected failure for --help\\n"
log 12---bad-flag@mail
main --bad-flag && printf "Unexpected success for --bad-flag\\n"
log 13-no-arguments@mail
main && printf "Unexpected success for no arguments\\n"
log 14-no-command-given@mail
main 14-no-command-given@mail \
  && printf "Unexpected success for no command\\n"
# Without this the exit status will be non-zero, causing the wrapper to fail.
true

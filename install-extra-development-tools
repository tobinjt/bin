#!/bin/bash

set -e -f -u -o pipefail

if is_mac_os; then
  brew-update-brew-cleanup
fi

# If you run 'go get' from a directory containing go source code it will change
# go.{mod,sum} in that directory, so change to a temporary directory.
cd "${TMPDIR:-/tmp}"
if type go >& /dev/null; then
  # Clean up binaries so that GoInstallBinaries will install updated binaries.
  bindir="${GOPATH}/bin"
  if [[ -d "${bindir}" ]]; then
    printf "Clearing out binaries from %s\\n" "${bindir}"
    find "${bindir}" -type f -delete
  fi

  # keep-sorted start
  # Dead code detection.
  go install golang.org/x/tools/cmd/deadcode@latest
  # Auto-import packages.
  go install golang.org/x/tools/cmd/goimports@master
  # keep-sorted end
fi

if type rustup >& /dev/null; then
  rustup-init --no-modify-path -y
  # Add ~/.cargo/bin to $PATH.
  source "${HOME}/.shellrc"
  rustup install stable
  rustup update
  rustup component add clippy rust-analyzer rust-src
  rustup update
  # https://github.com/taiki-e/cargo-llvm-cov?tab=readme-ov-file#from-source
  cargo +stable install cargo-llvm-cov --locked
  # https://crates.io/crates/cargo-watch
  cargo install cargo-watch
  # TODO: I might need to sign binaries so I can debug.
fi

#!/bin/bash

set -e -f -u -o pipefail

main() {
  if ! type pre-commit >& /dev/null; then
    printf "pre-commit is not installed, exiting successfully.\n"
    return 0
  fi
  local config_file=".pre-commit-config.yaml"
  if [[ ! -f "${config_file}" ]]; then
    return 0
  fi
  if ! git transport-is-ssh; then
    # We don't need pre-commit if we're not committing.
    return 0
  fi
  local hook_file=".git/hooks/pre-commit"
  local legacy_hook_file="${hook_file}.legacy"
  if [[ -L "${legacy_hook_file}" || -e "${legacy_hook_file}" ]]; then
    printf "%s/%s exists\n" "${PWD}" "${legacy_hook_file}" >&2
  fi
  if [[ -e "${hook_file}" ]] && \
      ! grep -q -F 'File generated by pre-commit' "${hook_file}"; then
    printf "%s/%s exists but is not configured by pre-commit\n" \
      "${PWD}" "${hook_file}" >&2
    return 1
  fi
  if [[ "${config_file}" -nt "${hook_file}" ]]; then
    stat "${config_file}" "${hook_file}"
    printf "Installing pre-commit in %s\n" "${PWD}"
    pre-commit install --install-hooks
    if grep -q -F 'stages: [commit-msg]' "${config_file}"; then
      pre-commit install --hook-type commit-msg
    fi
  fi
  # Unconditionally install hooks; this is a quiet no-op if hooks are already
  # installed.
  local output
  output="$(pre-commit install-hooks)"
  if [[ -n "${output}" ]]; then
    printf "Installing pre-commit hooks in %s\n" "${PWD}"
    printf "%s\n" "${output}"
  fi
  return 0
}

main "$@"

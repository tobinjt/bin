#!/bin/bash

set -e -f -u -o pipefail

commit_any_changes() {
  # Commit the changes if any.
  git add -A .
  if ! git check-local-copy-is-clean --ignore-unpushed-commits 2>/dev/null; then
    git commit -m 'Update all plugins.'
  fi
}

update-all-submodules() {
  local directory="$1"
  cd "${directory}"
  git submodule update --recursive --remote
  commit_any_changes
}

merge-upstream-changes() {
  local directory="$1" branch_name="$2"
  cd "${directory}"
  git checkout master
  git pull upstream master
  git push
  # Now merge them into my branch.
  git checkout "${branch_name}"
  git pull
  git merge master
  git push
}

update-neovim-plugins() {
  cd "${HOME}/src/dotfiles"
  nvim --headless -c "Lazy! sync" -c "qa"
  commit_any_changes
}

main() {
  # Check there aren't any diffs.
  update-dotfiles-and-bin

  update-all-submodules "${HOME}/bin"
  update-all-submodules "${HOME}/src/dotfiles"
  # Force overwriting and deletion of removed files.
  dotfiles -f -X
  update-neovim-plugins
  dotfiles -f -X

  # Push to upstream, update vim helptags, etc.
  update-dotfiles-and-bin
}

# Stop git looking for a commit message when 'git pull' is run.
GIT_MERGE_AUTOEDIT=no
export GIT_MERGE_AUTOEDIT
main "$@"

#!/bin/bash

set -e -f -u -o pipefail

# shellcheck disable=SC1090
source "${HOME}/bin/backup-to-rsync-net-lib"

usage() {
  printf "%s [--test-keys-only] HOSTNAME SUBDIR SOURCE_DIR\\n" "$0"
  printf "E.g. %s johntobin-laptop Documents /Users/johntobin/Documents\\n" "$0"
}

main() {
  local test_keys_only=0
  if [[ "$#" -eq 4 && "$1" == "--test-keys-only" ]]; then
    test_keys_only=1
    shift
  fi
  if [[ "$#" -ne 3 ]]; then
    usage
    return 1
  fi

  local hostname="$1" subdir="$2" source_dir="$3"
  if ! check_ssh_key_exists "${hostname}" "${subdir}" "${test_keys_only}"; then
    return 1
  fi
  if [[ "${test_keys_only}" -eq 1 ]]; then
    return 0
  fi

  local ssh_key_path
  ssh_key_path="$(ssh_key_path "${hostname}" "${subdir}")"

  # Make sure we use the right key rather than any inherited keys.
  unset SSH_AUTH_SOCK
  local flags=()
  if [[ -t 0 ]]; then
    printf "Backing up %s\\n" "${source_dir}"
    # Progress indicator when run interactively.
    flags+=("--info=progress2,stats" "--progress" "--verbose")
  fi
  local dest_dir
  dest_dir="$(dest_dir "${hostname}" "${subdir}")"

  # Handle files vanishing, e.g. when wordpress backups are cleaned up while
  # rsync is running.
  # https://git.samba.org/?p=rsync.git;a=blob_plain;f=support/rsync-no-vanished;hb=HEAD
  # Suppress output by passing it through grep, taking care to handle grep
  # failing if no lines are output.  Save the exit status if rsync fails so that
  # it can be checked for the magic value 24.
  local exit_status=0
  ( rsync --archive --bwlimit=100K --delete \
        --partial-dir=.rsync-partial --partial \
        --filter="dir-merge rsync-net_filters" \
        --filter="dir-merge,- .gitignore" \
        --rsh="ssh -i ${ssh_key_path}" \
        "${flags[@]:+${flags[@]}}" \
        "${source_dir}/" "rsync-net:${dest_dir}/" \
      2> >( grep -v \
              -e '^Connection closed by' \
              -e '^Timeout, server .* not responding' \
              -e '^file has vanished:' \
              -e '^packet_write_wait: Connection to .* Broken pipe' \
              -e '^rsync error: error in rsync protocol data stream (code 12)' \
              -e '^rsync error: unexplained error' \
              -e '^rsync warning: some files vanished before they could be ' \
              -e '^rsync: .sender. write error: Broken pipe (32)' \
              -e '^rsync: connection unexpectedly closed' \
              -e '^ssh: Could not resolve hostname' \
              -e '^ssh: connect to host .*: Operation timed out' \
            || true)) \
    || exit_status="$?"
  # 24 is a magic exit code that means some files disappeared during the
  # transfer; replace 24 with 0 so we exit successfully.
  if [[ "${exit_status}" == 24 ]]; then
    exit_status=0
  fi
  return "${exit_status}"
}

main "$@"

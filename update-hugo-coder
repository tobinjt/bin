#!/bin/bash

set -e -f -u -o pipefail

main() {
  if [[ "$#" -ne 0 ]]; then
    printf "%s: no arguments accepted\\n" "$0" >&2
    return 1
  fi
  local STANDALONE_THEME_DIR="${HOME}/src/hugo-coder"
  local WEBSITE_DIR="${HOME}/src/johntobin.ie" THEME_SUBDIR="themes/hugo-coder"
  readonly STANDALONE_THEME_DIR WEBSITE_DIR THEME_SUBDIR

  cd "${STANDALONE_THEME_DIR}"
  git check-local-copy-is-clean
  if ! git remote show | grep -q upstream; then
    git remote add upstream https://github.com/luizdepra/hugo-coder
  fi

  # Pull upstream changes into my local copy and push to my fork on Github.
  git checkout master
  git pull upstream master
  git push
  # Pull any changes I have made, merge changes upstream changes from master
  # branch, and push to my fork on Github.
  git checkout my-changes
  git pull
  git merge master
  git push

  # Check that the website repo is clean.  This protects against this sequence:
  # - git add foo
  # - update-hugo-coder
  #   - ....
  #   - git add themes/hugo-coder
  #   - git commit # Commits both themes/hugo-coder and foo.
  cd "${WEBSITE_DIR}"
  git check-local-copy-is-clean --ignore-unpushed-commits
  # Update the copy of hugo-coder that Hugo uses.
  cd "${WEBSITE_DIR}/${THEME_SUBDIR}"
  git check-local-copy-is-clean --ignore-unpushed-commits
  git pull
  git push
  # Commit the theme changes in the website repo if necessary.
  cd "${WEBSITE_DIR}"
  if ! git check-local-copy-is-clean --ignore-unpushed-commits 2>/dev/null; then
    git add "${THEME_SUBDIR}"
    git commit -m "Updated ${THEME_SUBDIR}."
  fi
  git pull
  git push
  git check-local-copy-is-clean
}

main "$@"

#!/bin/bash

set -e -f -u -o pipefail

# Set up PATH properly.  I need binaries from ~/bin, and rsync from homebrew on
# MacOS.
PATH="${HOME}/bin:/usr/local/bin:${PATH}"

__NUM_FAILED_BACKUPS=0
backup() {
  if ! backup-single-directory-to-rsync-net "$@"; then
    ((__NUM_FAILED_BACKUPS++))
  fi
}

all_backups_succeeded() {
  if [[ "${__NUM_FAILED_BACKUPS}" -ne 0 && -t 0 ]]; then
    # Only show error when interactive because I don't want output in cron jobs.
    printf "%d failed backups\\n" "${__NUM_FAILED_BACKUPS}" >&2
  fi
  return "${__NUM_FAILED_BACKUPS}"
}

dest_dir() {
  local hostname="$1" subdir="$2"
  printf "%s/%s\\n" "${hostname}" "${subdir}"
}

ssh_key_basename() {
  local hostname="$1" subdir="$2"
  printf "%s_%s\\n" "${hostname}" "${subdir}"
}

ssh_key_path() {
  local hostname="$1" subdir="$2"
  printf "%s/.ssh/rsync-net/%s\\n" "${HOME}" \
    "$(ssh_key_basename "${hostname}" "${subdir}")"
}

print_setup_instructions() {
  local hostname="$1" subdir="$2"
  local ssh_key ssh_key_path dest_dir
  ssh_key="$(ssh_key_basename "${hostname}" "${subdir}")"
  ssh_key_path="$(ssh_key_path "${hostname}" "${subdir}")"
  dest_dir="$(dest_dir "${hostname}" "${subdir}")"

  printf "Create a key with:\\n"
  printf "$ ssh-keygen -t rsa -b 4096 -o -f %s -C rsync-net_%s\\n" \
    "${ssh_key_path}" "${ssh_key}"
  printf "Add the key to authorized_keys:\\n"
  printf "command=\"rsync --server -vlogDtpre.iLsfxC --delete"
  printf " --partial-dir=.rsync-partial . %s\",%s PUB_KEY\\n" \
    "${dest_dir}" "no-pty,no-agent-forwarding,no-port-forwarding"
}

check_ssh_key_exists() {
  local hostname="$1" subdir="$2" test_keys_only="$3" ssh_key_path
  ssh_key_path="$(ssh_key_path "${hostname}" "${subdir}")"
  if [[ ! -f "${ssh_key_path}" ]]; then
    printf "Missing SSH key :(\\n" >&2
    print_setup_instructions "${hostname}" "${subdir}" >&2
    if [[ "${test_keys_only}" -eq 1 ]]; then
      return 0
    fi
    return 1
  fi
  return 0
}

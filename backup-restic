#!/bin/bash

set -e -f -u -o pipefail

# config.sh needs to define the following variables:
# - RESTIC_REPOSITORIES  - repositories to backup to.
# - RESTIC_PASSWORD_FILE - file containing the password for the repository.
# - DIRS_TO_BACKUP       - array of directories to backup; if DIRS_TO_BACKUP is
#                          empty, `restic init` will be run instead of `restic
#                          backup`.
#
# - To configure a Google Drive backup see https://rclone.org/drive/ and name
#   the target `google-drive-backups`.  Add `rclone:google-drive-backups:PATH`
#   to RESTIC_REPOSITORIES.
# - To configure an rsync.net backup:
#   - target="most likely the hostname"
#   - ssh_key_path="${HOME}/.ssh/rsync-net/restic/${target}"
#   - ssh_key_comment="rsync-net_restic_${target}"
#   - ssh-keygen -t rsa -b 4096 -o -N '' -q \
#       -f "${ssh_key_path}" -C "${ssh_key_comment}"
#   - Add this line to authorized_keys on rsync.net:
#     - restrict,command="rclone serve restic --stdio restic/${target}" PUB_KEY
#   - Add `rclone:rsync-net:restic/${target}` to RESTIC_REPOSITORIES.
# - https://ruderich.org/simon/notes/append-only-backups-with-restic-and-rclone
#   has background info about using restricted ssh keys with restic and rclone.
source "${HOME}/.config/backup-restic/config.sh"
# Fix permissions, just in case.
chmod 700 "$(dirname "${RESTIC_PASSWORD_FILE}")" "${RESTIC_PASSWORD_FILE}"

for RESTIC_REPOSITORY in "${RESTIC_REPOSITORIES[@]}"; do
  # I am using flags rather than environment variables so that copy and paste of
  # commands for debugging is easier.
  options=("--password-file=${RESTIC_PASSWORD_FILE}")
  options+=("--repo=${RESTIC_REPOSITORY}")
  if grep -q ':rsync-net:' <<<"${RESTIC_REPOSITORY}"; then
    target="${RESTIC_REPOSITORY##*:}"
    ssh_key_file="${HOME}/.ssh/rsync-net/restic/${target}"
    options+=("-o" "rclone.program=ssh -i ${ssh_key_file} rsync-net ignored")
  fi
  if [[ ! -t 0 ]]; then
    options+=("--quiet")
  fi

  if [[ "${#DIRS_TO_BACKUP}" -eq 0 ]]; then
    echo restic init "${options[@]}"
  else
    echo restic backup "${options[@]}" "${DIRS_TO_BACKUP[@]}"
  fi
done

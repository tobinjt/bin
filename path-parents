#!/bin/bash

set -e
usage() {
  cat <<USAGE
Usage: $0 [-s N] PATH [PATH . . .]
Args:
  -s N: Skip output of paths with N or fewer components (/bin has 1 component).
USAGE
}
warn() {
  echo "$@" >&2
}
die() {
  warn "$@"
  exit 1
}

SKIP=0
while getopts hs: flag; do
  case "${flag}" in
    h)
      usage
      exit 0
      ;;
    s)
      SKIP="${OPTARG}"
      ;;
  esac
done
shift $(( OPTIND - 1 ))

if [[ "$#" -eq 0 ]]; then
  die "$( usage )"
fi
if [[ "$1" == "--help" ]]; then
  usage
  exit 0
fi

for path in "$@"; do
  echo "${path}";
done \
  | awk -F / '
    { # Handle the presence or absence of leading slashes.
      if ($0 ~ /^\//) {
        path = "/";
      } else {
        path = "";
      }
      num_components = 0;
      for (i = 1; i <= NF; i++) {
        subdir = $i;
        # Skip empty subdirs.  These come from repeated slashes, but also from
        # before leading slashes.
        if (subdir != "") {
          num_components++;
          if (length(path) > 0 && path !~ /\/$/) {
            # The path already has contents and does not end with a slash, so we
            # need one as a separator.
            path = path "/";
          }
          path = path subdir;
          if (num_components > '"${SKIP}"') {
            print path;
          }
        }
      }
    }'

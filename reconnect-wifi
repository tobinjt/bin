#!/bin/bash

# NOTE: Not using -e because we want to continue regardless of failure.
set -f -u -o pipefail

readonly DRYRUN="no"
# Figure out which network interface is wifi from the output of
# networksetup -listnetworkserviceorder
readonly WIFI_DEV="en1"
readonly SSID="burrow"

readonly EXTERNAL_IP="8.8.8.8"
readonly EXTERNAL_HOSTNAME="www.google.com"
PATH="${PATH}:/usr/sbin:/sbin"

#Â Make 5 separate attempts with delays between then to cope with some transient
# failures.
for i in 1 2 3 4 5; do
  if [[ "${i}" -gt 1 ]]; then
    sleep 10
  fi
  if ping -c 5 -o -q "${EXTERNAL_IP}" >& /dev/null; then
    exit 0
  fi
  if host "${EXTERNAL_HOSTNAME}" >& /dev/null; then
    exit 0
  fi
done

ping -c 5 "${EXTERNAL_IP}"
host "${EXTERNAL_HOSTNAME}"
if [ "${DRYRUN}" == "no" ]; then
  echo "Reconnecting wifi"
  # Sometimes disabling the wifi is necessary to make everything work again :/
  networksetup -setairportpower "${WIFI_DEV}" off
  sleep 10
  networksetup -setairportpower "${WIFI_DEV}" on
  sleep 10
  networksetup -setairportnetwork "${WIFI_DEV}" "${SSID}" - \
    < "${HOME}/Documents/${SSID}-password.txt"
  sleep 30
  ping -c 5 "${EXTERNAL_IP}"
  host "${EXTERNAL_HOSTNAME}"
else
  echo "Dryrun is true, not making changes."
fi

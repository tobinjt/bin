#!/usr/bin/perl

# Display a list of packages which could possibly be marked as auto-installed.

use strict;
use warnings;

use IO::File;

if (@ARGV) {
	die <<"USAGE";
Usage: $0
Show packages that are depended on by other packages; such packages might have
been automatically installed as dependencies, and can be marked as autoinstalled
with 'aptitude markauto PACKAGE'
USAGE
}

my %essential_packages = run_aptitude(q{~E}, q{essential});
my %auto_installed = run_aptitude(q{~i ~M}, q{autoinstalled});
my %installed = run_aptitude(q{~i !~M ~E}, q{installed});

# exists $reverse_dependencies{FOO}->{BAR} means that BAR depends on FOO.
my %reverse_dependencies;

PACKAGE:
foreach my $package (keys %installed) {
	next PACKAGE if exists $auto_installed{$package};
	next PACKAGE if exists $essential_packages{$package};
	my $deps = join q{ }, sort keys %{$reverse_dependencies{$package}};
	if ($deps) {
		print qq{$package: $deps\n};
	}
}

sub run_aptitude {
    my ($pattern, $message) = @_;

    print STDERR qq{$0: searching for $message packages . . . };
    my $command = qq{aptitude -F '%p' search '$pattern' |};
    my %found;
    my $command_fh = IO::File->new($command)
        or die qq{$0: Failed running "$command": $?, $!\n};
    while (<$command_fh>) {
        chomp;
        $found{$_} = 1;
    }

    print STDERR qq{done\n};
    return %found;
}
